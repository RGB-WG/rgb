[workspace]
members = [
    "psbt",
    "cli",
    "."
]
default-members = [
    "psbt",
    "."
]

[workspace.package]
version = "0.11.1-alpha.1"
keywords = ["bitcoin", "lightning", "rgb", "smart-contracts", "lnp-bp"]
categories = ["cryptography::cryptocurrencies"]
authors = ["Dr Maxim Orlovsky <orlovsky@lnp-bp.org>"]
homepage = "https://rgb.tech"
repository = "https://github.com/RGB-WG/rgb"
rust-version = "1.81.0"
edition = "2021"
license = "Apache-2.0"

[workspace.dependencies]
amplify = "4.7.0"
nonasync = { version = "0.1.2", features = ["log"] }
baid64 = "0.2.2"
strict_encoding = "2.7.0"
strict_types = "2.7.2"
commit_verify = "0.11.0-beta.9"
bp-core = "0.11.1-alpha.1"
bp-std = { version = "0.11.1-alpha.1", features = ["client-side-validation"] }
bp-wallet = { version = "0.11.1-alpha.1" }
rgb-std = { version = "0.11.1-alpha.1" }
rgb-psbt = { version = "0.11.1-alpha.1", path = "psbt" }
indexmap = "2.4.0"
chrono = "0.4.38"
serde_crate = { package = "serde", version = "1", features = ["derive"] }
serde_yaml = "0.9.19"
log = { version = "0.4", features = ["max_level_trace", "release_max_level_debug"] }

[package]
name = "rgb-runtime"
version.workspace = true
description = "RGB smart contracts wallet runtime"
keywords.workspace = true
categories.workspace = true
readme = "README.md"
authors.workspace = true
homepage.workspace = true
repository.workspace = true
rust-version.workspace = true
edition.workspace = true
license.workspace = true

[lib]
name = "rgb"
crate-type = ["cdylib", "rlib"]

[dependencies]
amplify = { workspace = true }
nonasync = { workspace = true }
baid64 = { workspace = true }
commit_verify = { workspace = true }
strict_types = { workspace = true }
bp-core = { workspace = true }
bp-std = { workspace = true }
bp-wallet = { workspace = true }
rgb-std = { workspace = true }
rgb-psbt = { workspace = true }
indexmap = { workspace = true }
chrono = { workspace = true }
serde_crate = { workspace = true, optional = true }
serde_yaml = { workspace = true, optional = true }
log = { workspace = true, optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2"
rand = { version = "0.8.4", optional = true }
getrandom = { version = "0.2", features = ["js"] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3"

[features]
default = []
all = ["esplora_blocking", "electrum_blocking", "mempool_blocking", "serde", "log", "fs", "cli"]
fs = ["serde", "bp-wallet/fs", "rgb-std/fs"]
cli = ["fs", "bp-wallet/cli"]
esplora_blocking = ["rgb-std/esplora_blocking"]
esplora_blocking-wasm = ["rgb-std/esplora_blocking-wasm"]
electrum_blocking = ["rgb-std/electrum_blocking"]
mempool_blocking = ["rgb-std/mempool_blocking"]
serde = ["serde_crate", "serde_yaml", "bp-std/serde", "rgb-psbt/serde"]

[package.metadata.docs.rs]
features = ["all"]

[patch.crates-io]
aluvm = { git = "https://github.com/zoedberg/rust-aluvm", branch = "0.11.1-2" }
commit_verify = { git = "https://github.com/zoedberg/client_side_validation", branch = "0.11.1-2" }
bp-consensus = { git = "https://github.com/zoedberg/bp-core", branch = "0.11.1-2" }
bp-core = { git = "https://github.com/zoedberg/bp-core", branch = "0.11.1-2" }
bp-std = { git = "https://github.com/zoedberg/bp-std", branch = "0.11.1-2" }
bp-invoice = { git = "https://github.com/zoedberg/bp-std", branch = "0.11.1-2" }
descriptors = { git = "https://github.com/zoedberg/bp-std", branch = "0.11.1-2" }
psbt = { git = "https://github.com/zoedberg/bp-std", branch = "0.11.1-2" }
bp-electrum = { git = "https://github.com/zoedberg/bp-electrum-client", branch= "0.11.1-2" }
bp-esplora = { git = "https://github.com/zoedberg/bp-esplora-client", branch = "0.11.1-2" }
bp-wallet = { git = "https://github.com/zoedberg/bp-wallet", branch = "0.11.1-2" }
rgb-core = { git = "https://github.com/zoedberg/rgb-core", branch = "0.11.1-2" }
rgb-std = { git = "https://github.com/zoedberg/rgb-std", branch = "0.11.1-2" }
